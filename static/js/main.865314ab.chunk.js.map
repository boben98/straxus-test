{"version":3,"sources":["Actions/index.js","Components/Playfield.jsx","Components/Play.jsx","Components/QuestionTable.jsx","Components/Questions.jsx","Components/Header.jsx","Reducers/name.js","Reducers/point.js","Reducers/questions.js","Reducers/index.js","index.jsx"],"names":["resetPoints","type","shuffleArray","array","i","length","j","Math","floor","random","Playfield","props","l","questions","state","list","currentQuestion","question","currentRightAnswer","rightAnswer","currentAnswers","allAnswers","hit","miss","wrongAnswer","next","bind","answer","this","setState","addPoint","slice","style","background","width","className","name","points","onClick","disabled","window","location","reload","history","push","Component","connect","withRouter","Play","hasName","handleNameChange","handleSubmit","event","preventDefault","target","value","addName","onSubmit","onChange","required","payload","QuestionTable","id","useSelector","filter","q","dispatch","useDispatch","colSpan","rowSpan","deleteQuestion","wrongAnswer1","wrongAnswer2","wrongAnswer3","Questions","handleQuestionChange","handleRightChange","handleWrong1Change","handleWrong2Change","handleWrong3Change","handleAdd","addQuestion","document","forms","reset","map","rows","placeholder","pathname","nameReducer","action","pointReducer","questionReducer","currentId","item","rootReducer","combineReducers","Quiz","paddingBottom","paddingTop","display","justifyContent","textAlign","exact","path","render","persistor","purge","then","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistStore","ReactDOM","loading","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.865314ab.chunk.js","sourcesContent":["export const addName = (name) => {\r\n  return {\r\n    type: \"ADD_NAME\",\r\n    payload: name,\r\n  };\r\n};\r\n\r\nexport const addQuestion = (question) => {\r\n  return {\r\n    type: \"ADD_QUESTION\",\r\n    payload: question,\r\n  };\r\n};\r\n\r\nexport const deleteQuestion = (id) => {\r\n  return {\r\n    type: \"DELETE_QUESTION\",\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const addPoint = () => {\r\n  return {\r\n    type: \"ADD_POINT\",\r\n  };\r\n};\r\n\r\nexport const resetPoints = () => {\r\n  return {\r\n    type: \"RESET_POINTS\",\r\n  };\r\n};\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addPoint, resetPoints } from \"../Actions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n//credit: Laurens Holst (stackoverflow)\r\nfunction shuffleArray(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n  return array;\r\n}\r\n\r\nclass Playfield extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    props.resetPoints();\r\n    const l = shuffleArray(props.questions);\r\n    this.state = {\r\n      list: l,\r\n      currentQuestion: l[0].question,\r\n      currentRightAnswer: l[0].rightAnswer,\r\n      currentAnswers: shuffleArray(l[0].allAnswers),\r\n      hit: false,\r\n      miss: false,\r\n      wrongAnswer: \"\",\r\n    };\r\n\r\n    this.next = this.next.bind(this);\r\n  }\r\n\r\n  answer(answer) {\r\n    if (answer === this.state.currentRightAnswer) {\r\n      this.setState({ hit: true });\r\n      this.props.addPoint();\r\n    } else this.setState({ miss: true, wrongAnswer: answer });\r\n  }\r\n\r\n  next() {\r\n    const l = shuffleArray(this.state.list.slice(1));\r\n    this.setState({\r\n      list: l,\r\n      currentQuestion: l[0].question,\r\n      currentRightAnswer: l[0].rightAnswer,\r\n      currentAnswers: shuffleArray(l[0].allAnswers),\r\n      hit: false,\r\n      miss: false,\r\n      wrongAnswer: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const renderNext = () => {\r\n      if (this.state.list.length > 1 && (this.state.hit || this.state.miss)) {\r\n        return (\r\n          <button className=\"mybutton\" onClick={this.next}>\r\n            Next\r\n          </button>\r\n        );\r\n      } else if (this.state.hit || this.state.miss)\r\n        return (\r\n          <div>\r\n            <h2>We are out of questions</h2>\r\n            <div className=\"player-points\">\r\n              <button\r\n                className=\"mybutton\"\r\n                onClick={() => {\r\n                  window.location.reload();\r\n                  this.props.resetPoints();\r\n                }}\r\n              >\r\n                Restart game\r\n              </button>{\" \"}\r\n              <button\r\n                className=\"mybutton\"\r\n                onClick={() => this.props.history.push(\"/questions\")}\r\n              >\r\n                Add questions\r\n              </button>\r\n            </div>\r\n          </div>\r\n        );\r\n    };\r\n\r\n    const style = (answer) => {\r\n      if (this.state.hit) {\r\n        if (answer === this.state.currentRightAnswer) {\r\n          return { background: \"#71a371\" };\r\n        }\r\n      } else if (this.state.miss) {\r\n        if (answer === this.state.currentRightAnswer) {\r\n          return { background: \"#71a371\" };\r\n        }\r\n        if (answer === this.state.wrongAnswer) {\r\n          return { background: \"#d46969\" };\r\n        }\r\n      } else return {};\r\n    };\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <div className=\"player-points\">\r\n          <span className=\"score\">Player: {this.props.name}</span>\r\n          <span className=\"score\">Points: {this.props.points}</span>\r\n        </div>\r\n        <h2>{this.state.currentQuestion}</h2>\r\n        <button\r\n          className=\"answer\"\r\n          style={style(this.state.currentAnswers[0])}\r\n          onClick={() => this.answer(this.state.currentAnswers[0])}\r\n          disabled={this.state.hit || this.state.miss ? \"true\" : \"\"}\r\n        >\r\n          {this.state.currentAnswers[0]}\r\n        </button>\r\n        <button\r\n          className=\"answer\"\r\n          style={style(this.state.currentAnswers[1])}\r\n          onClick={() => this.answer(this.state.currentAnswers[1])}\r\n          disabled={this.state.hit || this.state.miss ? \"true\" : \"\"}\r\n        >\r\n          {this.state.currentAnswers[1]}\r\n        </button>\r\n        <button\r\n          className=\"answer\"\r\n          style={style(this.state.currentAnswers[2])}\r\n          onClick={() => this.answer(this.state.currentAnswers[2])}\r\n          disabled={this.state.hit || this.state.miss ? \"true\" : \"\"}\r\n        >\r\n          {this.state.currentAnswers[2]}\r\n        </button>\r\n        <button\r\n          className=\"answer\"\r\n          style={style(this.state.currentAnswers[3])}\r\n          onClick={() => this.answer(this.state.currentAnswers[3])}\r\n          disabled={this.state.hit || this.state.miss ? \"true\" : \"\"}\r\n        >\r\n          {this.state.currentAnswers[3]}\r\n        </button>\r\n        {renderNext()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.name,\r\n    points: state.points,\r\n    questions: state.questions.list,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addPoint, resetPoints })(\r\n  withRouter(Playfield)\r\n);\r\n","import { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Playfield from \"./Playfield\";\r\nimport { addName } from \"../Actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Play extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: \"\", hasName: props.name };\r\n\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleNameChange(event) {\r\n    event.preventDefault();\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.addName(this.state.name);\r\n    this.setState({ hasName: true });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.hasName)\r\n      return (\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label>\r\n            <h2>Your name</h2>\r\n            <input\r\n              className=\"myinput\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={this.handleNameChange}\r\n              required\r\n            />\r\n          </label>\r\n          <input className=\"mybutton\" type=\"submit\" value=\"Start game\" />\r\n        </form>\r\n      );\r\n    else if (this.props.questions.list.length <= 0)\r\n      return (\r\n        <div>\r\n          <h2>You have no questions added</h2>\r\n          <button\r\n            className=\"mybutton\"\r\n            onClick={() => this.props.history.push(\"/questions\")}\r\n          >\r\n            Add questions\r\n          </button>\r\n        </div>\r\n      );\r\n    else return <Playfield />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    name: state.name,\r\n    questions: state.questions,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addName })(withRouter(Play));\r\n","import { deleteQuestion } from \"../Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction QuestionTable({ id }) {\r\n  const question = useSelector(\r\n    (state) => state.questions.list.filter((q) => q.id === id)[0]\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <table>\r\n      <tbody>\r\n        <tr>\r\n          <th colSpan=\"2\">{question.question}</th>\r\n          <td rowSpan=\"3\">\r\n            <button\r\n              className=\"mybutton2\"\r\n              onClick={() => dispatch(deleteQuestion(id))}\r\n            >\r\n              Del\r\n            </button>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td className=\"right-answer\">{question.rightAnswer}</td>\r\n          <td>{question.wrongAnswer1}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>{question.wrongAnswer2}</td>\r\n          <td>{question.wrongAnswer3}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default QuestionTable;\r\n","import { Component } from \"react\";\r\nimport QuestionTable from \"./QuestionTable\";\r\nimport { addQuestion } from \"../Actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass Questions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: \"\",\r\n      rightAnswer: \"\",\r\n      wrongAnswer1: \"\",\r\n      wrongAnswer2: \"\",\r\n      wrongAnswer3: \"\",\r\n    };\r\n\r\n    this.handleQuestionChange = this.handleQuestionChange.bind(this);\r\n    this.handleRightChange = this.handleRightChange.bind(this);\r\n    this.handleWrong1Change = this.handleWrong1Change.bind(this);\r\n    this.handleWrong2Change = this.handleWrong2Change.bind(this);\r\n    this.handleWrong3Change = this.handleWrong3Change.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleQuestionChange(event) {\r\n    event.preventDefault();\r\n    this.setState({ question: event.target.value });\r\n  }\r\n\r\n  handleRightChange(event) {\r\n    event.preventDefault();\r\n    this.setState({ rightAnswer: event.target.value });\r\n  }\r\n\r\n  handleWrong1Change(event) {\r\n    event.preventDefault();\r\n    this.setState({ wrongAnswer1: event.target.value });\r\n  }\r\n\r\n  handleWrong2Change(event) {\r\n    event.preventDefault();\r\n    this.setState({ wrongAnswer2: event.target.value });\r\n  }\r\n\r\n  handleWrong3Change(event) {\r\n    event.preventDefault();\r\n    this.setState({ wrongAnswer3: event.target.value });\r\n  }\r\n\r\n  handleAdd(event) {\r\n    event.preventDefault();\r\n    if (\r\n      this.state.question &&\r\n      this.state.rightAnswer &&\r\n      this.state.wrongAnswer1 &&\r\n      this.state.wrongAnswer2 &&\r\n      this.state.wrongAnswer3\r\n    ) {\r\n      const q = {\r\n        ...this.state,\r\n        allAnswers: [\r\n          this.state.rightAnswer,\r\n          this.state.wrongAnswer1,\r\n          this.state.wrongAnswer2,\r\n          this.state.wrongAnswer3,\r\n        ],\r\n      };\r\n      this.props.addQuestion(q);\r\n      this.setState({\r\n        question: \"\",\r\n        rightAnswer: \"\",\r\n        wrongAnswer1: \"\",\r\n        wrongAnswer2: \"\",\r\n        wrongAnswer3: \"\",\r\n      });\r\n      document.forms[\"addForm\"].reset();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        {this.props.questions.map((question) => {\r\n          return (\r\n            <QuestionTable key={question.id} id={question.id}></QuestionTable>\r\n          );\r\n        })}\r\n        <form name=\"addForm\" onSubmit={this.handleAdd}>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <th colSpan=\"2\">\r\n                  <textarea\r\n                    rows=\"1\"\r\n                    className=\"myinput2\"\r\n                    placeholder=\"Type here the new question\"\r\n                    onChange={this.handleQuestionChange}\r\n                  ></textarea>\r\n                </th>\r\n                <td rowSpan=\"3\">\r\n                  <b>\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"mybutton2\"\r\n                      value=\"Add\"\r\n                    ></input>\r\n                  </b>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"right-answer\">\r\n                  <input\r\n                    className=\"myinput2\"\r\n                    placeholder=\"Right answer\"\r\n                    onChange={this.handleRightChange}\r\n                  ></input>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"myinput2\"\r\n                    placeholder=\"Wrong answer\"\r\n                    onChange={this.handleWrong1Change}\r\n                  ></input>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <input\r\n                    className=\"myinput2\"\r\n                    placeholder=\"Wrong answer\"\r\n                    onChange={this.handleWrong2Change}\r\n                  ></input>\r\n                </td>\r\n                <td>\r\n                  <input\r\n                    className=\"myinput2\"\r\n                    placeholder=\"Wrong answer\"\r\n                    onChange={this.handleWrong3Change}\r\n                  ></input>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    questions: state.questions.list,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { addQuestion })(withRouter(Questions));\r\n","import { withRouter } from \"react-router-dom\";\r\nimport { resetPoints } from \"../Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Header(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <div className=\"header\">\r\n      <button\r\n        className=\"mode\"\r\n        disabled={window.location.pathname === \"/\" ? \"true\" : \"\"}\r\n        onClick={() => props.history.push(\"/\")}\r\n      >\r\n        Play\r\n      </button>\r\n      <h1\r\n        onClick={() => {\r\n          window.location.reload();\r\n          dispatch(resetPoints());\r\n        }}\r\n      >\r\n        Quiz App\r\n      </h1>\r\n      <button\r\n        className=\"mode\"\r\n        disabled={window.location.pathname === \"/questions\" ? \"true\" : \"\"}\r\n        onClick={() => props.history.push(\"/questions\")}\r\n      >\r\n        Questions\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Header);\r\n","const nameReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case \"ADD_NAME\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default nameReducer;\r\n","const pointReducer = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_POINT\":\r\n      return state + 1;\r\n    case \"RESET_POINTS\":\r\n      return 0;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default pointReducer;\r\n","const questionReducer = (state = { currentId: 0, list: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_QUESTION\":\r\n      action.payload.id = state.currentId;\r\n      state.list.push(action.payload);\r\n      return {\r\n        currentId: state.currentId + 1,\r\n        list: state.list,\r\n      };\r\n    case \"DELETE_QUESTION\":\r\n      return {\r\n        currentId: state.currentId,\r\n        list: state.list.filter((item) => item.id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default questionReducer;\r\n","import nameReducer from \"./name\";\r\nimport pointReducer from \"./point\";\r\nimport questionReducer from \"./questions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  name: nameReducer,\r\n  points: pointReducer,\r\n  questions: questionReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Play from \"./Components/Play\";\nimport Questions from \"./Components/Questions\";\nimport Header from \"./Components/Header\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./Reducers\";\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nfunction Quiz() {\n  return (\n    <div style={{ paddingBottom: \"60px\" }}>\n      <Router>\n        <Header></Header>\n        <div\n          style={{\n            paddingTop: \"2em\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            textAlign: \"center\",\n            width: \"100%\",\n          }}\n        >\n          <Switch>\n            <Route exact path=\"/\" render={() => <Play />} />\n            <Route exact path=\"/questions\" render={() => <Questions />} />\n          </Switch>\n        </div>\n        <footer>\n          <button\n            className=\"restartbtn\"\n            onClick={() =>\n              persistor.purge().then(() => window.location.reload())\n            }\n          >\n            Reset\n          </button>\n        </footer>\n      </Router>\n    </div>\n  );\n}\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<h1>LOADING</h1>} persistor={persistor}>\n      <React.StrictMode>\n        <Quiz />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}